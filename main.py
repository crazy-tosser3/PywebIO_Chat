from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import *
import asyncio
import json

from utils import load_messages, save_messages, refresh_msg, load_user
from admin import admin_actions
from config import chat_msgs, online_users, muted_users, USERS_BASE


#–ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ë–î
with open(USERS_BASE, 'r', encoding='utf-8') as f:
    Users = json.load(f)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
participants = {user["username"]: user["password"] for user in Users.get("Ussers", [])}
admins = {admin["username"]: admin["password"] for admin in Users.get("Admins", [])}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —á–∞—Ç–∞
async def main():
    global chat_msgs

    put_markdown('üìö –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≥—Ä—É–ø–ø–æ–π –ò–°–ü9-kh11!!!')

    load_messages()
    load_user()

    msg_box = output()
    put_scrollable(msg_box, height=300, keep_bottom=True)

    user_exit = False
    last_nicname = None

    while True:
        if user_exit:
            action = await actions('–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', buttons=['–ü–µ—Ä–µ–∑–∞–π—Ç–∏', '–ó–∞–∫—Ä—ã—Ç—å'])
            if action == '–ü–µ—Ä–µ–∑–∞–π—Ç–∏':
                nicname = last_nicname
                user_exit = False
            else:
                break
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            nicname = await input("–í–æ–π–¥–∏—Ç–µ –≤ —á–∞—Ç", required=True, placeholder="–í–∞—à–µ –∏–º—è", 
                                  validate=lambda n: "–ò–º—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" if n not in participants and n not in admins else None)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
            if nicname in participants:
                participant_password = await input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", type=PASSWORD, required=True)
                if participant_password == participants[nicname]:
                    online_users.add(nicname)
                else:
                    toast("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!", color="error")
                    continue

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            elif nicname in admins:
                admin_password = await input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞", type=PASSWORD, required=True)
                if admin_password == admins[nicname]:
                    is_admin = True
                    nicname = f"[–ê–¥–º–∏–Ω] {nicname}"
                    online_users.add(nicname)
                else:
                    toast("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!", color="error")
                    continue

            chat_msgs.append(('üéÉ', f"{nicname} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –±–µ—Å–µ–¥–µ!"))
            msg_box.append(put_markdown(f'`{nicname}` –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –±–µ—Å–µ–¥–µ!'))

            refresh_task = run_async(refresh_msg(nicname, msg_box))

            for m in chat_msgs:
                msg_box.append(put_markdown(f"`{m[0]}`: {m[1]}"))

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
            if "–ê–¥–º–∏–Ω" in nicname:
                run_async(admin_actions(nicname, msg_box))
                put_buttons(['–û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å'], onclick=lambda _: run_async(admin_actions(nicname, msg_box)))

            # –¶–∏–∫–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
            while True:
                data = await input_group('‚úâ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', [
                    input(placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è", name="msg"), 
                    actions(name="cmd", buttons=["–û—Ç–ø—Ä–∞–≤–∏—Ç—å", {'label': "–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞", 'type': "cancel"}])
                ])

                if data is None:
                    user_exit = True
                    last_nicname = nicname
                    break

                if data['cmd'] == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å":
                    if not data['msg']:
                        toast("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!", color="error")
                        continue

                    if nicname in muted_users:
                        toast("–í—ã –∑–∞–º—å—é—á–µ–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!", color="error")
                        continue

                    msg_box.append(put_markdown(f"`{nicname}`: {data['msg']}"))
                    chat_msgs.append((nicname, data['msg']))
                    save_messages()

            refresh_task.close()

            online_users.remove(nicname)
            toast("–í—ã –≤—ã—à–ª–∏ –∏–∑ —á–∞—Ç–∞!")
            msg_box.append(put_markdown(f"üéÉ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nicname} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!"))
            chat_msgs.append(('üéÉ', f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nicname} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!"))
            save_messages()

if __name__ == '__main__':
    start_server(main, debug=True, port=8000, cdn=False)
